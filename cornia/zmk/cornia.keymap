/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define L_BASE 0
#define L_NAV 1
#define L_MOUSE 2
#define L_QWERTY 3
#define L_NUM 4
#define L_SYM 5
#define L_FUNC 6
#define L_BT 7
#define L_MEDIA 8


&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

&mt {
    tapping-term-ms = <300>;
    quick-tap-ms = <200>;
};

/ {
    macros {
        tln_base: type_base {
            label = "Type Base";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp A &kp S &kp E>;
        };
        tln_nav: type_nav {
            label = "Type nav";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp A &kp V>;
        };
        tln_mouse: type_mouse {
            label = "Type mouse";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp O &kp U &kp S &kp E>;
        };
        tln_qwerty: type_qwerty {
            label = "Type qwerty";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp W &kp E &kp R &kp T &kp Y>;
        };
    };
};

// colemak macros
#define A_LMETA &mt LMETA A
#define R_LALT  &mt LALT R
#define S_LCTRL &mt LCTRL S
#define T_LSHFT &mt LSHFT T
#define N_RSHFT &mt RSHFT N
#define E_RCTRL &mt RCTRL E
#define I_RALT  &mt RALT I
#define O_RMETA &mt RMETA O

// qwerty versions
// a is the same
#define S_LALT  &mt LALT S
#define D_LCTRL &mt LCTRL D
#define F_LSHFT &mt LSHFT F
#define J_RSHFT &mt RSHFT J
#define K_RCTRL &mt RCTRL K
#define L_RALT  &mt RALT L
#define SEM_LMETA &mt LMETA SEMI

&caps_word {
    continue-list = < UNDERSCORE MINUS >;
};

/ {
    behaviors {
        // toggle qwerty if the K key is tapped twice
        tgl_qwerty_bt: toggle_layer {
            label = "TOG_QWERTY";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = < &lt L_BT ESC>, <&tog L_QWERTY >;
        };

        double_shift: double_shift_capsword {
            label = "Double Shift Capsword";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = < &kp LSHFT >, < &caps_word >;
        };
    };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&kp Q        &kp W      &kp F            &kp P            &kp B                                             &kp J               &kp L            &kp U             &kp Y        &kp COLON
A_LMETA      R_LALT     S_LCTRL          T_LSHFT          &kp G                                             &kp M               N_RSHFT          E_RCTRL           I_RALT       O_RMETA
&kp Z        &kp X      &kp C            &kp D            &kp V           &kp 1                &kp 2        &kp K               &kp H            &kp COMMA         &kp DOT      &kp FSLH
                        &tln_base        &lt L_MEDIA ESC  &lt L_NAV SPACE &lt L_MOUSE TAB      &kp ENTER    &lt L_SYM ENTER     &lt L_NUM  BSPC  &lt L_FUNC DEL    &tgl_qwerty_bt
                        >;
                };
        };
};
